"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HtmlReportGenerator = void 0;
var fs_1 = require("fs");
var path_1 = require("path");
var HtmlReportGenerator = /** @class */ (function () {
    function HtmlReportGenerator() {
    }
    HtmlReportGenerator.addReport = function (report) {
        this.reports.push(report);
    };
    HtmlReportGenerator.generateHtmlReport = function (outputPath) {
        if (outputPath === void 0) { outputPath = './test-reports'; }
        // Ensure output directory exists
        if (!(0, fs_1.existsSync)(outputPath)) {
            (0, fs_1.mkdirSync)(outputPath, { recursive: true });
        }
        var htmlContent = this.generateHtmlContent();
        // Generate timestamp in format: YYYY-MM-DD_HH-MM-SS
        var now = new Date();
        var timestamp = "".concat(now.getFullYear(), "-").concat(String(now.getMonth() + 1).padStart(2, '0'), "-").concat(String(now.getDate()).padStart(2, '0'), "_").concat(String(now.getHours()).padStart(2, '0'), "-").concat(String(now.getMinutes()).padStart(2, '0'), "-").concat(String(now.getSeconds()).padStart(2, '0'));
        // Get environment from the first report (if available)
        var environment = this.reports.length > 0 ? this.reports[0].environment : 'unknown';
        // Create filename: Zeitstempel_Environment.html
        var fileName = "".concat(timestamp, "_").concat(environment, ".html");
        var filePath = (0, path_1.join)(outputPath, fileName);
        (0, fs_1.writeFileSync)(filePath, htmlContent, 'utf8');
        console.log("\uD83D\uDCCA HTML Report generated: ".concat(filePath));
    };
    /**
     * Generates HTML report with a fixed filename for CI/CD compatibility
     * @param outputPath Output directory path
     * @param filename Custom filename (default: consolidated-report.html)
     */
    HtmlReportGenerator.generateConsolidatedHtmlReport = function (outputPath, filename) {
        if (outputPath === void 0) { outputPath = './test-reports'; }
        if (filename === void 0) { filename = 'consolidated-report.html'; }
        // Ensure output directory exists
        if (!(0, fs_1.existsSync)(outputPath)) {
            (0, fs_1.mkdirSync)(outputPath, { recursive: true });
        }
        var htmlContent = this.generateHtmlContent();
        var filePath = (0, path_1.join)(outputPath, filename);
        (0, fs_1.writeFileSync)(filePath, htmlContent, 'utf8');
        console.log("\uD83D\uDCCA Consolidated HTML Report generated: ".concat(filePath));
        // Also generate the timestamped version
        this.generateHtmlReport(outputPath);
    };
    HtmlReportGenerator.generateHtmlContent = function () {
        var _this = this;
        var totalTests = this.reports.length;
        var passedTests = this.reports.filter(function (r) { return r.status === 'PASSED'; }).length;
        var failedTests = totalTests - passedTests;
        return "\n<!DOCTYPE html>\n<html lang=\"de\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Playwright Test Report</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script>\n        tailwind.config = {\n            theme: {\n                extend: {\n                    colors: {\n                        'success': '#10b981',\n                        'error': '#ef4444',\n                        'warning': '#f59e0b'\n                    }\n                }\n            }\n        }\n    </script>\n    <style>\n        .collapsible-content {\n            max-height: 0;\n            overflow: hidden;\n            transition: max-height 0.3s ease-out;\n        }\n        .collapsible-content.expanded {\n            max-height: 2000px;\n            transition: max-height 0.5s ease-in;\n        }\n        \n        /* Ring Chart Animations */\n        @keyframes ringGrow {\n            from {\n                stroke-dasharray: 0 502.4;\n            }\n        }\n        \n        .ring-chart circle {\n            animation: ringGrow 2s ease-out;\n        }\n        \n        /* Pulse Animation for Icons */\n        @keyframes pulse {\n            0%, 100% {\n                transform: scale(1);\n            }\n            50% {\n                transform: scale(1.1);\n            }\n        }\n        \n        .pulse-icon {\n            animation: pulse 2s infinite;\n        }\n        \n        /* Counter Animation */\n        @keyframes countUp {\n            from {\n                opacity: 0;\n                transform: translateY(20px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        .count-up {\n            animation: countUp 1s ease-out;\n        }\n    </style>\n</head>\n<body class=\"bg-gray-50 min-h-screen\">\n    <div class=\"container mx-auto px-4 py-8\">\n        <!-- Header -->\n        <div class=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n            <div class=\"flex items-center justify-between mb-4\">\n                <h1 class=\"text-3xl font-bold text-gray-800\">\uD83C\uDFAD Playwright Test Report</h1>\n                <div class=\"text-sm text-gray-500\">\n                    Generated: ".concat(new Date().toLocaleString('de-DE'), "\n                </div>\n            </div>\n            \n            <!-- Test Summary Dashboard -->\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n                <!-- Ring Diagram -->\n                <div class=\"bg-white rounded-lg shadow-lg p-6\">\n                    <h3 class=\"text-lg font-semibold text-gray-800 mb-4 text-center\">Test Results Overview</h3>\n                    <div class=\"flex items-center justify-center\">\n                        <div class=\"relative\">\n                            <!-- SVG Ring Chart -->\n                            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" class=\"transform -rotate-90 ring-chart\">\n                                <!-- Background Circle -->\n                                <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"#e5e7eb\" stroke-width=\"20\"/>\n                                <!-- Passed Tests Arc -->\n                                <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"#10b981\" stroke-width=\"20\"\n                                        stroke-dasharray=\"").concat((passedTests / totalTests * 502.4) || 0, " 502.4\"\n                                        stroke-linecap=\"round\"/>\n                                <!-- Failed Tests Arc -->\n                                <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"#ef4444\" stroke-width=\"20\"\n                                        stroke-dasharray=\"").concat((failedTests / totalTests * 502.4) || 0, " 502.4\"\n                                        stroke-dashoffset=\"").concat(-(passedTests / totalTests * 502.4) || 0, "\"\n                                        stroke-linecap=\"round\"/>\n                            </svg>\n                            <!-- Center Content -->\n                            <div class=\"absolute inset-0 flex flex-col items-center justify-center\">\n                                <div class=\"text-3xl font-bold text-gray-800 count-up\">").concat(totalTests, "</div>\n                                <div class=\"text-sm text-gray-600\">Total Tests</div>\n                                <div class=\"text-2xl mt-2 pulse-icon\">").concat(failedTests === 0 ? '🎉' : totalTests === failedTests ? '😞' : '⚡', "</div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <!-- Ring Chart Legend -->\n                    <div class=\"mt-4 flex justify-center space-x-6\">\n                        <div class=\"flex items-center space-x-2\">\n                            <div class=\"w-4 h-4 bg-green-500 rounded-full\"></div>\n                            <span class=\"text-sm text-gray-600\">Passed (").concat(passedTests, ")</span>\n                        </div>\n                        <div class=\"flex items-center space-x-2\">\n                            <div class=\"w-4 h-4 bg-red-500 rounded-full\"></div>\n                            <span class=\"text-sm text-gray-600\">Failed (").concat(failedTests, ")</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Statistics Cards -->\n                <div class=\"space-y-4\">\n                    <!-- Success Rate Card -->\n                    <div class=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-6 border border-purple-200\">\n                        <div class=\"flex items-center justify-between\">\n                            <div>\n                                <h4 class=\"text-lg font-semibold text-gray-800\">Success Rate</h4>\n                                <div class=\"text-3xl font-bold text-purple-600\">").concat(Math.round((passedTests / totalTests * 100) || 0), "%</div>\n                            </div>\n                            <div class=\"text-4xl\">\u26A1</div>\n                        </div>\n                        <!-- Mini Progress Bar -->\n                        <div class=\"mt-4 bg-purple-200 rounded-full h-2\">\n                            <div class=\"bg-purple-600 h-2 rounded-full transition-all duration-1000\" \n                                 style=\"width: ").concat(Math.round((passedTests / totalTests * 100) || 0), "%\"></div>\n                        </div>\n                    </div>\n                    \n                    <!-- Test Results Grid -->\n                    <div class=\"grid grid-cols-2 gap-4\">\n                        <!-- Passed Tests -->\n                        <div class=\"bg-gradient-to-br from-green-50 to-green-100 rounded-lg p-4 border border-green-200\">\n                            <div class=\"flex items-center justify-between\">\n                                <div>\n                                    <div class=\"text-2xl font-bold text-green-600\">").concat(passedTests, "</div>\n                                    <div class=\"text-sm text-green-700\">Passed</div>\n                                </div>\n                                <div class=\"text-2xl\">\u2705</div>\n                            </div>\n                        </div>\n                        \n                        <!-- Failed Tests -->\n                        <div class=\"bg-gradient-to-br from-red-50 to-red-100 rounded-lg p-4 border border-red-200\">\n                            <div class=\"flex items-center justify-between\">\n                                <div>\n                                    <div class=\"text-2xl font-bold text-red-600\">").concat(failedTests, "</div>\n                                    <div class=\"text-sm text-red-700\">Failed</div>\n                                </div>\n                                <div class=\"text-2xl\">\u274C</div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <!-- Status Message -->\n                    <div class=\"bg-gradient-to-r from-gray-50 to-gray-100 rounded-lg p-4 border border-gray-200\">\n                        <div class=\"flex items-center space-x-3\">\n                            <div class=\"text-2xl\">\n                                ").concat(failedTests === 0 ? '🎯' : '⚠️', "\n                            </div>\n                            <div>\n                                <div class=\"font-semibold text-gray-800\">\n                                    ").concat(totalTests === 0 ? 'No Tests Executed' :
            failedTests === 0 ? 'All Tests Passed!' :
                "".concat(passedTests, "/").concat(totalTests, " Tests Passed"), "\n                                </div>\n                                <div class=\"text-sm text-gray-600\">\n                                    ").concat(failedTests === 0 && totalTests > 0 ? 'Perfect test run! 🎉' :
            failedTests > 0 ? "".concat(failedTests, " test").concat(failedTests > 1 ? 's' : '', " need").concat(failedTests === 1 ? 's' : '', " attention") :
                'Run your tests to see results', "\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Test Results -->\n        <div class=\"space-y-4\">\n            ").concat(this.reports.map(function (report, index) { return _this.generateTestReportCard(report, index); }).join(''), "\n        </div>\n    </div>\n\n    \n\n\n    <script>\n        function toggleCollapse(id) {\n            const content = document.getElementById('content-' + id);\n            const icon = document.getElementById('icon-' + id);\n            \n            if (content.classList.contains('expanded')) {\n                content.classList.remove('expanded');\n                icon.style.transform = 'rotate(0deg)';\n            } else {\n                content.classList.add('expanded');\n                icon.style.transform = 'rotate(90deg)';\n            }\n        }\n        \n        // Alle Test-Cards sind standardm\u00E4\u00DFig zusammengeklappt\n        // Kein automatisches Erweitern von fehlgeschlagenen Tests\n    </script>\n</body>\n</html>");
    };
    HtmlReportGenerator.generateTestReportCard = function (report, index) {
        var _this = this;
        var statusIcon = report.status === 'PASSED' ? '✅' : '❌';
        var statusClass = report.status === 'PASSED' ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50';
        var headerClass = report.status === 'PASSED' ? 'bg-green-100' : 'bg-red-100';
        return "\n        <!-- Test Card ".concat(index + 1, " -->\n        <div class=\"bg-white rounded-lg shadow-lg border-2 ").concat(statusClass, "\" data-status=\"").concat(report.status, "\" data-test-id=\"").concat(index, "\">\n            <!-- Test Header (Clickable) -->\n            <div class=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors ").concat(headerClass, "\" onclick=\"toggleCollapse(").concat(index, ")\">\n                <div class=\"flex items-center justify-between\">\n                    <div class=\"flex items-center space-x-3\">\n                        <div class=\"text-2xl\">").concat(statusIcon, "</div>\n                        <div>\n                            <h3 class=\"text-lg font-semibold text-gray-800\">").concat(report.testName, "</h3>\n                            <div class=\"text-sm text-gray-600\">\n                                <span class=\"inline-flex items-center mr-4\">\n                                    <span class=\"w-2 h-2 bg-blue-400 rounded-full mr-1\"></span>\n                                    ").concat(report.testSpec, "\n                                </span>\n                                <span class=\"inline-flex items-center mr-4\">\n                                    <span class=\"w-2 h-2 bg-purple-400 rounded-full mr-1\"></span>\n                                    ").concat(report.environment, "\n                                </span>\n                                <span class=\"inline-flex items-center\">\n                                    <span class=\"w-2 h-2 bg-gray-400 rounded-full mr-1\"></span>\n                                    ").concat(report.totalSteps, " Steps\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"flex items-center space-x-4\">\n                        <!-- Step Statistics -->\n                        <div class=\"text-right text-sm\">\n                            <div class=\"text-green-600 font-semibold\">\u2705 ").concat(report.passedSteps, "</div>\n                            <div class=\"text-red-600 font-semibold\">\u274C ").concat(report.failedSteps, "</div>\n                        </div>\n                        \n                        <!-- Collapse Icon -->\n                        <div id=\"icon-").concat(index, "\" class=\"text-gray-400 transition-transform duration-200\">\n                            \u25B6\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Collapsible Content -->\n            <div id=\"content-").concat(index, "\" class=\"collapsible-content\">\n                <div class=\"px-4 pb-4\">\n                    <!-- Test Timeline -->\n                    <div class=\"bg-gray-50 rounded-lg p-3 mb-4\">\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                            <div>\n                                <span class=\"font-semibold text-gray-600\">Start:</span>\n                                <span class=\"text-gray-800\">").concat(report.startTime, "</span>\n                            </div>\n                            <div>\n                                <span class=\"font-semibold text-gray-600\">End:</span>\n                                <span class=\"text-gray-800\">").concat(report.endTime, "</span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <!-- Steps -->\n                    <div class=\"space-y-2\">\n                        <h4 class=\"font-semibold text-gray-700 mb-3\">\uD83D\uDCCB Test Steps</h4>\n                        ").concat(report.steps.map(function (step) { return _this.generateStepCard(step); }).join(''), "\n                    </div>\n                </div>\n            </div>\n        </div>");
    };
    HtmlReportGenerator.generateStepCard = function (step) {
        var statusIcon = step.status === 'PASSED' ? '✅' : '❌';
        var statusClass = step.status === 'PASSED' ? 'border-l-green-400 bg-green-50' : 'border-l-red-400 bg-red-50';
        return "\n        <div class=\"border-l-4 ".concat(statusClass, " p-3 rounded-r-lg\">\n            <div class=\"flex items-start justify-between\">\n                <div class=\"flex items-start space-x-3\">\n                    <div class=\"text-lg\">").concat(statusIcon, "</div>\n                    <div class=\"flex-1 min-w-0\">\n                        <div class=\"flex items-center space-x-2 mb-1\">\n                            <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                                Step ").concat(step.stepNumber, "\n                            </span>\n                            <span class=\"text-sm text-gray-500\">").concat(step.timestamp, "</span>\n                        </div>\n                        \n                        <div class=\"text-sm\">\n                            <span class=\"font-semibold text-gray-700\">").concat(step.fileName, "</span>\n                            <span class=\"text-gray-500\"> \u2192 </span>\n                            <span class=\"font-medium text-gray-600\">").concat(step.methodName, "</span>\n                        </div>\n                        \n                        ").concat(step.details ? "<div class=\"text-sm text-gray-600 mt-1\">".concat(step.details, "</div>") : '', "\n                        ").concat(step.locator ? "<div class=\"text-xs text-gray-500 mt-1 font-mono bg-gray-100 p-1 rounded\">Locator: ".concat(step.locator, "</div>") : '', "\n                        ").concat(step.url ? "<div class=\"text-xs text-blue-600 mt-1\">\uD83C\uDF10 ".concat(step.url, "</div>") : '', "\n                        ").concat(step.responseStatus ? "<div class=\"text-xs text-orange-600 mt-1\">Status: ".concat(step.responseStatus, "</div>") : '', "\n                    </div>\n                </div>\n            </div>\n        </div>");
    };
    HtmlReportGenerator.clearReports = function () {
        this.reports = [];
    };
    HtmlReportGenerator.getReportsCount = function () {
        return this.reports.length;
    };
    HtmlReportGenerator.getReports = function () {
        return __spreadArray([], this.reports, true);
    };
    HtmlReportGenerator.reports = [];
    return HtmlReportGenerator;
}());
exports.HtmlReportGenerator = HtmlReportGenerator;
